version: "3.8"

include: 
  - path: labs/k3s/docker-compose.yml
  - path: labs/ubuntu/docker-compose.yml

x-infra-defaults: &infra-defaults
  networks:
    - internal
  profiles:
    - infra

services:
  authconfig:
    <<: *infra-defaults
    build: ./authconfig
    volumes:
      - "./authconfig.yml:/config.yml"
    ports: 
      - 7080:7080
    environment:
      REDIS_PASS: "${REDIS_PASS}"
      JWT_SECRET: "${JWT_SECRET}"
    depends_on: 
      redis: 
        condition: service_started
      k3d-http:
        condition: service_started
        required: false # because it's in a seperate profile
  redis:
    <<: *infra-defaults
    image: redis
    command: redis-server --save "" --appendonly no --requirepass ${REDIS_PASS}
    ports: 
      - 6379:6379
  dashboard:
    <<: *infra-defaults
    build: ./asciinema-dashboard
    environment:
      AUTH_GITHUB_ID: "${AUTH_GITHUB_ID}"
      AUTH_GITHUB_SECRET: "${AUTH_GITHUB_SECRET}"
      JWT_SECRET: "${JWT_SECRET}"
      AUTH_SECRET: "${AUTH_SECRET}"
      SRC_LOG_DIR: /tmp/logs
      PORT: 3000
    volumes: 
      - logs:/tmp/logs
    ports: 
      - 3000:3000
  containerssh:
    <<: *infra-defaults
    build: ./containerssh
    image: devinchristianson/containerssh:0.5.1 #containerssh/containerssh:0.5.0-alpha.1-20240107
    ports:
      - 2222:2222
      - 7000:7000
    volumes:
      - asciinema-socket:/var/run/asciinema/
      - ./containerssh.yaml:/config.yaml
      - ./ssh_host_rsa_key:/var/secrets/ssh_host_rsa_key
      - /var/run/docker.sock:/var/run/docker.sock
      - logs:/var/log/containerssh
    user: "root"
    depends_on: 
      - authconfig
volumes:
  logs: {}
networks:
  internal: 
  k3s:
    